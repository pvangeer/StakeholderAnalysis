<fluent:RibbonWindow x:Class="StakeholderAnalysis.App.MainWindow"
                     xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                     xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                     xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                     xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                     xmlns:viewmodels="clr-namespace:StakeholderAnalysis.Visualization.ViewModels;assembly=StakeholderAnalysis.Visualization"
                     xmlns:fluent="urn:fluent-ribbon"
                     xmlns:projectExplorer="clr-namespace:StakeholderAnalysis.Visualization.ViewModels.ProjectExplorer;assembly=StakeholderAnalysis.Visualization"
                     xmlns:onionDiagramProperties="clr-namespace:StakeholderAnalysis.Visualization.ViewModels.OnionDiagramProperties;assembly=StakeholderAnalysis.Visualization"
                     xmlns:converters="clr-namespace:StakeholderAnalysis.Visualization.Converters;assembly=StakeholderAnalysis.Visualization"
                     xmlns:gui="clr-namespace:StakeholderAnalysis.Gui;assembly=StakeholderAnalysis.Gui"
                     xmlns:onionDiagrams="clr-namespace:StakeholderAnalysis.Data.OnionDiagrams;assembly=StakeholderAnalysis.Data"
                     xmlns:forceFieldDiagramProperties="clr-namespace:StakeholderAnalysis.Visualization.ViewModels.ForceFieldDiagramProperties;assembly=StakeholderAnalysis.Visualization"
                     xmlns:attitudeImpactDiagramPropertiesViewModel="clr-namespace:StakeholderAnalysis.Visualization.ViewModels.AttitudeImpactDiagramProperties;assembly=StakeholderAnalysis.Visualization"
                     mc:Ignorable="d"
                     Closing="MainWindowClosing"
                     Loaded="MainWindow_OnLoaded"
                     Title="Stakeholderanalyse"
                     Height="900"
                     Width="1500">

    <Window.DataContext>
        <viewmodels:MainWindowViewModel />
    </Window.DataContext>

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Fluent;Component/Themes/generic.xaml" />
                <ResourceDictionary Source="/StakeholderAnalysis.Visualization;Component/DataTemplates/MainContentPresenterDataTemplate.xaml" />
                <ResourceDictionary Source="/StakeholderAnalysis.Visualization;Component/DataTemplates/StatusBar/StatusBarDataTemplate.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <converters:IsSelectedViewTypeToVisibilityConverter x:Key="IsSelectedViewInfoToVisibilityConverter" />
            <converters:ValueToSameConverter x:Key="DummyConverter" />
            <converters:IsActiveToolWindowConverter x:Key="IsActiveToolWindowConverter" />

        </ResourceDictionary>
    </Window.Resources>

    
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <fluent:Ribbon Focusable="True" x:Name="Ribbon" AutomaticStateManagement="False">
            <fluent:Ribbon.Menu>
                <fluent:Backstage Background="#008fc5">

                    <fluent:BackstageTabControl>
                        <fluent:Button Header="Nieuw"
                                       Icon="pack://application:,,,/StakeholderAnalysis.Visualization;component/Resources/DocumentHS.png"
                                       fluent:KeyTip.Keys="N"
                                       Command="{Binding RibbonViewModel.NewCommand}" />

                        <fluent:Button Header="Opslaan"
                                       Icon="pack://application:,,,/StakeholderAnalysis.Visualization;component/Resources/saveHS.png"
                                       fluent:KeyTip.Keys="S"
                                       Command="{Binding RibbonViewModel.SaveCommand}" />

                        <fluent:Button Header="Opslaan als"
                                       Icon="pack://application:,,,/StakeholderAnalysis.Visualization;component/Resources/SaveAsHH.png"
                                       fluent:KeyTip.Keys="A"
                                       Command="{Binding RibbonViewModel.SaveAsCommand}" />

                        <fluent:Button Header="Openen"
                                       Icon="pack://application:,,,/StakeholderAnalysis.Visualization;component/Resources/openfolderHS.png"
                                       fluent:KeyTip.Keys="O"
                                       Command="{Binding RibbonViewModel.OpenCommand}" />

                        <fluent:SeparatorTabItem />

                        <fluent:Button Header="Afsluiten"
                                       Icon="pack://application:,,,/StakeholderAnalysis.Visualization;component/Resources/ClosePreviewHH.png"
                                       fluent:KeyTip.Keys="X"
                                       Command="{Binding RibbonViewModel.CloseApplication}" />
                    </fluent:BackstageTabControl>
                </fluent:Backstage>
            </fluent:Ribbon.Menu>

            <fluent:Ribbon.ContextualGroups>
                <fluent:RibbonContextualTabGroup
                    x:Name="onionGroup"
                    Header="Ui-diagram"
                    Background="Green"
                    Foreground="DarkSeaGreen">
                    <fluent:RibbonContextualTabGroup.Visibility>
                        <Binding 
                            Path="RibbonViewModel.ViewManagerViewModel.ActiveDocument"
                            Converter="{StaticResource IsSelectedViewInfoToVisibilityConverter}" 
                            UpdateSourceTrigger="PropertyChanged"/>
                    </fluent:RibbonContextualTabGroup.Visibility>
                </fluent:RibbonContextualTabGroup>
            </fluent:Ribbon.ContextualGroups>

            <fluent:RibbonTabItem Header="Start">
                <fluent:RibbonGroupBox Header="Beeld">
                    <fluent:ToggleButton 
                        Size="Middle"
                        Header="Projectgegevens tonen" 
                        Icon="pack://application:,,,/StakeholderAnalysis.Visualization;component/Resources/document.png"
                        IsChecked="{Binding RibbonViewModel.ToolWindows, Converter={StaticResource IsActiveToolWindowConverter}, ConverterParameter={x:Type projectExplorer:ProjectExplorerViewModel}}"
                        Command="{Binding RibbonViewModel.ToggleToolWindowCommand}"
                        CommandParameter="{x:Type projectExplorer:ProjectExplorerViewModel}"/>
                    <fluent:ToggleButton 
                        Size="Middle"
                        Header="UI-diagram gegevens tonen" 
                        Icon="pack://application:,,,/StakeholderAnalysis.Visualization;component/Resources/onion.png"
                        IsChecked="{Binding RibbonViewModel.ToolWindows, Converter={StaticResource IsActiveToolWindowConverter}, ConverterParameter={x:Type onionDiagramProperties:OnionDiagramPropertiesViewModel}}"
                        Command="{Binding RibbonViewModel.ToggleToolWindowCommand}"
                        CommandParameter="{x:Type onionDiagramProperties:OnionDiagramPropertiesViewModel}"/>
                    <fluent:ToggleButton 
                        Size="Middle"
                        Header="Krachtenveld-diagram gegevens tonen" 
                        Icon="pack://application:,,,/StakeholderAnalysis.Visualization;component/Resources/forces.png"
                        IsChecked="{Binding RibbonViewModel.ToolWindows, Converter={StaticResource IsActiveToolWindowConverter}, ConverterParameter={x:Type forceFieldDiagramProperties:ForceFieldDiagramPropertiesViewModel}}"
                        Command="{Binding RibbonViewModel.ToggleToolWindowCommand}"
                        CommandParameter="{x:Type forceFieldDiagramProperties:ForceFieldDiagramPropertiesViewModel}"/>
                    <fluent:ToggleButton 
                        Size="Middle"
                        Header="Houding-impact diagram gegevens tonen" 
                        Icon="pack://application:,,,/StakeholderAnalysis.Visualization;component/Resources/involvement.png"
                        IsChecked="{Binding RibbonViewModel.ToolWindows, Converter={StaticResource IsActiveToolWindowConverter}, ConverterParameter={x:Type attitudeImpactDiagramPropertiesViewModel:AttitudeImpactDiagramPropertiesViewModel}}"
                        Command="{Binding RibbonViewModel.ToggleToolWindowCommand}"
                        CommandParameter="{x:Type attitudeImpactDiagramPropertiesViewModel:AttitudeImpactDiagramPropertiesViewModel}"/>
                    <fluent:ToggleButton
                        Header="Vergrootglas"
                        Size="Large"
                        LargeIcon="pack://application:,,,/StakeholderAnalysis.Visualization;component/Resources/Magnifier.png"
                        IsChecked="{Binding RibbonViewModel.IsMagnifierActive}" />
                    <fluent:Button
                        Header="Afbeelding opslaan"
                        Size="Large"
                        LargeIcon="pack://application:,,,/StakeholderAnalysis.Visualization;component/Resources/SaveImage.png"
                        Command="{Binding RibbonViewModel.SaveImageCommand}" />

                </fluent:RibbonGroupBox>

                <fluent:RibbonGroupBox Header="Diagram">
                    <fluent:Button 
                        Header="Stakeholder(s) toevoegen" 
                        Command="{Binding RibbonViewModel.AddStakeholdersCommand, Converter={StaticResource DummyConverter}}"
                        Size="Large"
                        LargeIcon="pack://application:,,,/StakeholderAnalysis.Visualization;component/Resources/plus.png"/>
                </fluent:RibbonGroupBox>

            </fluent:RibbonTabItem>

            <fluent:RibbonTabItem Header="Ui-diagram" Group="{Binding Source={x:Reference onionGroup}}">
                <fluent:RibbonGroupBox Header="Ringen">
                    <fluent:Button 
                        Header="Ring toevoegen" 
                        Command="{Binding RibbonViewModel.AddOnionRingCommand, Converter={StaticResource DummyConverter}}"
                        Size="Middle"
                        Icon="pack://application:,,,/StakeholderAnalysis.Visualization;component/Resources/plus.png"/>
                    <fluent:Spinner 
                        Value="{Binding RibbonViewModel.Asymmetry, Converter={StaticResource DummyConverter}}" 
                        Header="Asymmetrie"
                        Format="0.#####"
                        Minimum="0.0" 
                        Maximum="1.0" 
                        Increment="0.1"/>
                </fluent:RibbonGroupBox>


                <fluent:RibbonGroupBox Header="Verbindingsgroepen">
                    <fluent:ComboBox 
                        IsEditable="False"
                        ItemsSource="{Binding RibbonViewModel.StakeholderConnectionGroups}"
                        SelectedItem="{Binding RibbonViewModel.SelectedStakeholderConnectionGroup}">
                        <ComboBox.ItemTemplate>
                            <DataTemplate DataType="onionDiagrams:StakeholderConnectionGroup">
                                <Border BorderThickness="0 0 0 3">
                                    <Border.BorderBrush>
                                        <SolidColorBrush Color="{Binding StrokeColor}"/>
                                    </Border.BorderBrush>
                                    <TextBlock Text="{Binding Name}"/>
                                </Border>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </fluent:ComboBox>
                </fluent:RibbonGroupBox>
            </fluent:RibbonTabItem>
        </fluent:Ribbon>

        <Grid Name="MainContentPresenter" Grid.Row="1" DataContext="{Binding MainContentPresenterViewModel}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="5"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <TabControl 
                Grid.Column="0" 
                ContentTemplate="{StaticResource ToolWindowDataTemplate}"
                ItemsSource="{Binding ViewManager.ToolWindows}"
                SelectedIndex="{Binding ViewManager.SelectedToolWindowIndex}">
                <TabControl.ItemTemplate>
                    <DataTemplate DataType="gui:ViewInfo">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Image Grid.Column="0" Source="{Binding IconReference}" Margin="0,0,4,0" Height="16" Width="16"/>
                            <TextBlock Grid.Column="1" TextAlignment="Left" Text="{Binding Title}" />
                            <Button Grid.Column="2" Command="{Binding CloseViewCommand}">
                                <Button.Style>
                                    <Style TargetType="Button">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="Button">
                                                    <Image Width="16" 
                                                           Height="16"
                                                           VerticalAlignment="Center"
                                                           HorizontalAlignment="Center"
                                                           Source="pack://application:,,,/StakeholderAnalysis.Visualization;component/Resources/remove.png"/>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Button.Style>
                            </Button>
                        </Grid>
                    </DataTemplate>
                </TabControl.ItemTemplate>
            </TabControl>
            <GridSplitter Grid.Column="1" Width="5" Background="Gainsboro" HorizontalAlignment="Stretch" ResizeBehavior="BasedOnAlignment"/>
            <TabControl 
                Grid.Column="2" 
                ContentTemplate="{StaticResource DocumentViewDataTemplate}"
                SelectedIndex="{Binding ViewManager.ActiveDocumentIndex, Mode=TwoWay}"
                ItemsSource="{Binding ViewManager.Views}">
                <TabControl.ItemTemplate>
                    <DataTemplate DataType="gui:ViewInfo">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Image Grid.Column="0" Source="{Binding IconReference}" Margin="0,0,4,0" Height="16" Width="16"/>
                            <TextBlock Grid.Column="1" TextAlignment="Left" Text="{Binding Title}" />
                            <Button Grid.Column="2" Command="{Binding CloseViewCommand}">
                                <Button.Style>
                                    <Style TargetType="Button">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="Button">
                                                    <Image Width="16" 
                                                           Height="16"
                                                           VerticalAlignment="Center"
                                                           HorizontalAlignment="Center"
                                                           Source="pack://application:,,,/StakeholderAnalysis.Visualization;component/Resources/remove.png"/>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Button.Style>
                            </Button>
                        </Grid>
                    </DataTemplate>
                </TabControl.ItemTemplate>
            </TabControl>
        </Grid>
        <ContentPresenter 
            Grid.Row="2"
            Content="{Binding StatusBarViewModel}"
            ContentTemplate="{StaticResource StatusBarDataTemplate}"/>
    </Grid>
</fluent:RibbonWindow>