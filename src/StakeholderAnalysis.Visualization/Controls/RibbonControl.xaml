<UserControl x:Class="StakeholderAnalysis.Visualization.Controls.RibbonControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:StakeholderAnalysis.Visualization.Controls"
             xmlns:fluent="urn:fluent-ribbon"
             xmlns:viewModels="clr-namespace:StakeholderAnalysis.Visualization.ViewModels"
             xmlns:onionDiagrams="clr-namespace:StakeholderAnalysis.Data.Diagrams.OnionDiagrams;assembly=StakeholderAnalysis.Data"
             xmlns:ribbon="clr-namespace:StakeholderAnalysis.Visualization.Converters.Ribbon"
             mc:Ignorable="d"
             d:DesignHeight="450" d:DesignWidth="800">

    <UserControl.DataContext>
        <viewModels:MainWindowViewModel />
    </UserControl.DataContext>

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary
                    Source="/StakeholderAnalysis.Visualization;Component/DataTemplates/AboutInfoDataTemplate.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <ribbon:IsSelectedViewTypeToVisibilityConverter x:Key="IsSelectedViewInfoToVisibilityConverter" />
        </ResourceDictionary>
    </UserControl.Resources>

    <fluent:Ribbon
        Focusable="True"
        x:Name="Ribbon"
        AutomaticStateManagement="False">
        <fluent:Ribbon.Menu>
            <fluent:Backstage>
                <fluent:BackstageTabControl>
                    <fluent:Button
                        Header="Nieuw"
                        Icon="pack://application:,,,/StakeholderAnalysis.Visualization;component/Resources/Fluent/document.ico"
                        fluent:KeyTip.Keys="N"
                        Command="{Binding RibbonViewModel.NewCommand}" />

                    <fluent:Button
                        Header="Opslaan"
                        Icon="pack://application:,,,/StakeholderAnalysis.Visualization;component/Resources/Fluent/save_regular.ico"
                        fluent:KeyTip.Keys="S"
                        Command="{Binding RibbonViewModel.SaveCommand}" />

                    <fluent:Button
                        Header="Opslaan als"
                        Icon="pack://application:,,,/StakeholderAnalysis.Visualization;component/Resources/Fluent/save_edit_regular.ico"
                        fluent:KeyTip.Keys="A"
                        Command="{Binding RibbonViewModel.SaveAsCommand}" />

                    <fluent:Button
                        Header="Openen"
                        Icon="pack://application:,,,/StakeholderAnalysis.Visualization;component/Resources/Fluent/folder_open_regular.ico"
                        fluent:KeyTip.Keys="O"
                        Command="{Binding RibbonViewModel.OpenCommand}" />

                    <fluent:SeparatorTabItem />

                    <fluent:BackstageTabItem
                        Header="Over"
                        Icon="pack://application:,,,/StakeholderAnalysis.Visualization;component/Resources/Fluent/info_regular.ico">
                        <ContentPresenter
                            Content="{Binding Path=RibbonViewModel}"
                            ContentTemplate="{StaticResource AboutBoxDataTemplate}" />
                    </fluent:BackstageTabItem>

                    <fluent:SeparatorTabItem />

                    <fluent:Button
                        Header="Afsluiten"
                        Icon="pack://application:,,,/StakeholderAnalysis.Visualization;component/Resources/Fluent/dismiss.ico"
                        fluent:KeyTip.Keys="X"
                        Command="{Binding RibbonViewModel.CloseApplication}" />
                </fluent:BackstageTabControl>
            </fluent:Backstage>
        </fluent:Ribbon.Menu>

        <fluent:Ribbon.ContextualGroups>
            <fluent:RibbonContextualTabGroup
                x:Name="onionGroup"
                Header="Ui-diagram"
                Background="{StaticResource Deltares.Brushes.DarkGreen}"
                Foreground="White">
                <fluent:RibbonContextualTabGroup.Visibility>
                    <Binding
                        Path="RibbonViewModel.ViewManagerViewModel.ActiveDocument"
                        Converter="{StaticResource IsSelectedViewInfoToVisibilityConverter}"
                        UpdateSourceTrigger="PropertyChanged" />
                </fluent:RibbonContextualTabGroup.Visibility>
            </fluent:RibbonContextualTabGroup>
        </fluent:Ribbon.ContextualGroups>

        <fluent:RibbonTabItem Header="Start" Height="30">
            <fluent:RibbonGroupBox Header="Beeld">
                <fluent:ToggleButton
                    Header="Projectgegevens"
                    Size="Large"
                    LargeIcon="pack://application:,,,/StakeholderAnalysis.Visualization;component/Resources/Fluent/text_bullet_list_tree.ico"
                    IsChecked="{Binding RibbonViewModel.IsProjectExplorerVisible}" />
                <fluent:ToggleButton
                    Header="Eigenschappen"
                    Size="Large"
                    LargeIcon="pack://application:,,,/StakeholderAnalysis.Visualization;component/Resources/Fluent/document_text_regular.ico"
                    IsChecked="{Binding RibbonViewModel.IsPropertiesVisible}" />
                <fluent:ToggleButton
                    Header="Vergrootglas"
                    Size="Large"
                    LargeIcon="pack://application:,,,/StakeholderAnalysis.Visualization;component/Resources/Fluent/zoom_in_regular.ico"
                    IsChecked="{Binding RibbonViewModel.IsMagnifierActive}" />
                <fluent:Button
                    Header="Afbeelding opslaan"
                    Size="Large"
                    LargeIcon="pack://application:,,,/StakeholderAnalysis.Visualization;component/Resources/Fluent/image.ico"
                    Command="{Binding RibbonViewModel.SaveImageCommand}" />
            </fluent:RibbonGroupBox>

            <fluent:RibbonGroupBox Header="Diagram">
                <fluent:Button
                    Header="Stakeholder(s) toevoegen"
                    Command="{Binding RibbonViewModel.AddStakeholdersCommand}"
                    Size="Large"
                    LargeIcon="pack://application:,,,/StakeholderAnalysis.Visualization;component/Resources/Operations/plus.png" />
            </fluent:RibbonGroupBox>

        </fluent:RibbonTabItem>

        <fluent:RibbonTabItem Header="Ui-diagram" Group="{Binding Source={x:Reference onionGroup}}">
            <fluent:RibbonGroupBox Header="Ringen">
                <fluent:Button
                    Header="Ring toevoegen"
                    Command="{Binding RibbonViewModel.AddOnionRingCommand}"
                    Size="Middle"
                    Icon="pack://application:,,,/StakeholderAnalysis.Visualization;component/Resources/Operations/plus.png" />
                <fluent:Spinner
                    Value="{Binding RibbonViewModel.Asymmetry}"
                    Header="Asymmetrie"
                    Format="0.#####"
                    Minimum="0.0"
                    Maximum="1.0"
                    Increment="0.1" />
                <StackPanel Orientation="Vertical" Margin="5,5,5,1">
                    <local:RotaryControl
                        Value="{Binding RibbonViewModel.Orientation, Mode=TwoWay}"
                        FontBrush="{StaticResource Deltares.Brushes.Foreground}"
                        FontSize="28"
                        Foreground="{StaticResource Deltares.Brushes.Foreground}"
                        MinimumValue="0"
                        NumberOfMajorTicks="9"
                        MajorTickIncrement="45"
                        MajorTickBrush="White"
                        NumberOfMinorTicks="6"
                        MinorTickBrush="White"
                        OuterDialFill="{StaticResource Deltares.Brushes.LightBlue}"
                        OuterDialBorder="Transparent"
                        OuterDialBorderThickness="1"
                        InnerDialRadius="60"
                        StartAngleInDegrees="0"
                        EndAngleInDegrees="360"
                        Background="Transparent">
                        <local:RotaryControl.PointerFill>
                            <LinearGradientBrush EndPoint="0.5,0" StartPoint="0.5,1">
                                <GradientStop Color="{StaticResource Deltares.Colors.Blue}" Offset="0" />
                                <GradientStop Color="#BBBBBB" Offset="1.0" />
                            </LinearGradientBrush>
                        </local:RotaryControl.PointerFill>
                        <local:RotaryControl.LayoutTransform>
                            <ScaleTransform ScaleX="0.26" ScaleY="0.26" />
                        </local:RotaryControl.LayoutTransform>
                    </local:RotaryControl>
                    <TextBlock
                        Text="Orientatie"
                        Margin="5,1,5,1" />
                </StackPanel>
            </fluent:RibbonGroupBox>

            <fluent:RibbonGroupBox Header="Verbindingsgroepen">
                <fluent:ComboBox
                    IsEditable="False"
                    ItemsSource="{Binding RibbonViewModel.StakeholderConnectionGroups}"
                    SelectedItem="{Binding RibbonViewModel.SelectedStakeholderConnectionGroup}">
                    <ComboBox.ItemTemplate>
                        <DataTemplate DataType="{x:Type onionDiagrams:StakeholderConnectionGroup}">
                            <Border BorderThickness="0 0 0 3">
                                <Border.BorderBrush>
                                    <SolidColorBrush Color="{Binding StrokeColor}" />
                                </Border.BorderBrush>
                                <TextBlock Text="{Binding Name}" />
                            </Border>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </fluent:ComboBox>
            </fluent:RibbonGroupBox>
        </fluent:RibbonTabItem>
    </fluent:Ribbon>
</UserControl>