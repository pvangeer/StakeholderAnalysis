<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:system="clr-namespace:System;assembly=mscorlib"
                    xmlns:componentModel="clr-namespace:System.ComponentModel;assembly=WindowsBase"
                    xmlns:onionDiagram="clr-namespace:StakeholderAnalysis.Visualization.Converters.Diagrams.OnionDiagram"
                    xmlns:diagrams="clr-namespace:StakeholderAnalysis.Visualization.Converters.Diagrams"
                    xmlns:twoAxisDiagrams="clr-namespace:StakeholderAnalysis.Visualization.ViewModels.DocumentViews.TwoAxisDiagrams"
                    xmlns:twoAxisDiagramConverters="clr-namespace:StakeholderAnalysis.Visualization.Converters.Diagrams.TwoAxisDiagramConverters">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary
            Source="/StakeholderAnalysis.Visualization;Component/DataTemplates/StakeholderDataTemplate.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <onionDiagram:PercentageToDimensionConverter x:Key="PercentageToDimensionConverter" />
    <twoAxisDiagramConverters:CanvasSizeToArrowsPathDataConverter x:Key="SizeToArrowsPathDataConverter" />
    <BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter" />
    <diagrams:IsSelectedStakeholderToOffsetConverter x:Key="IsSelectedStakeholderToOffsetConverter" />

    <DataTemplate x:Key="TwoAxisDiagramStakeholderDataTemplate" DataType="twoAxisDiagrams:IRankedStakeholderViewModel">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <StackPanel Grid.Column="0"
                        Orientation="Vertical"
                        Width="20"
                        Visibility="{Binding IsSelectedStakeholder, 
                Converter={StaticResource BoolToVisibilityConverter}}">
                <Button
                    Command="{Binding MoveStakeholderToTopCommand}">
                    <Button.Template>
                        <ControlTemplate TargetType="Button">
                            <Image Width="16"
                                   Height="16">
                                <Image.Style>
                                    <Style TargetType="Image">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding CanMoveToTop}" Value="True">
                                                <Setter Property="Source"
                                                        Value="pack://application:,,,/StakeholderAnalysis.Visualization;component/Resources/Operations/arrow_top_black.png" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding CanMoveToTop}" Value="False">
                                                <Setter Property="Source"
                                                        Value="pack://application:,,,/StakeholderAnalysis.Visualization;component/Resources/Operations/arrow_top_gray.png" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Image.Style>
                            </Image>
                        </ControlTemplate>
                    </Button.Template>
                </Button>
                <Button
                    Command="{Binding MoveStakeholderUpCommand}">
                    <Button.Template>
                        <ControlTemplate TargetType="Button">
                            <Image Width="16"
                                   Height="16">
                                <Image.Style>
                                    <Style TargetType="Image">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding CanMoveUp}" Value="True">
                                                <Setter Property="Source"
                                                        Value="pack://application:,,,/StakeholderAnalysis.Visualization;component/Resources/Operations/arrow_up_black.png" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding CanMoveUp}" Value="False">
                                                <Setter Property="Source"
                                                        Value="pack://application:,,,/StakeholderAnalysis.Visualization;component/Resources/Operations/arrow_up_gray.png" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Image.Style>
                            </Image>
                        </ControlTemplate>
                    </Button.Template>
                </Button>
                <Button
                    Command="{Binding MoveStakeholderDownCommand}">
                    <Button.Template>
                        <ControlTemplate TargetType="Button">
                            <Image Width="16"
                                   Height="16">
                                <Image.Style>
                                    <Style TargetType="Image">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding CanMoveDown}" Value="True">
                                                <Setter Property="Source"
                                                        Value="pack://application:,,,/StakeholderAnalysis.Visualization;component/Resources/Operations/arrow_down_black.png" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding CanMoveDown}" Value="False">
                                                <Setter Property="Source"
                                                        Value="pack://application:,,,/StakeholderAnalysis.Visualization;component/Resources/Operations/arrow_down_gray.png" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Image.Style>
                            </Image>
                        </ControlTemplate>
                    </Button.Template>
                </Button>
                <Button
                    Command="{Binding MoveStakeholderToBottomCommand}">
                    <Button.Template>
                        <ControlTemplate TargetType="Button">
                            <Image Width="16"
                                   Height="16">
                                <Image.Style>
                                    <Style TargetType="Image">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding CanMoveToBottom}" Value="True">
                                                <Setter Property="Source"
                                                        Value="pack://application:,,,/StakeholderAnalysis.Visualization;component/Resources/Operations/arrow_bottom_black.png" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding CanMoveToBottom}" Value="False">
                                                <Setter Property="Source"
                                                        Value="pack://application:,,,/StakeholderAnalysis.Visualization;component/Resources/Operations/arrow_bottom_gray.png" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Image.Style>
                            </Image>
                        </ControlTemplate>
                    </Button.Template>
                </Button>
            </StackPanel>
            <ContentPresenter
                Grid.Column="1"
                Content="{Binding}"
                ContentTemplate="{StaticResource StakeholderDataTemplate}"
                IsHitTestVisible="True" />
            <StackPanel Grid.Column="2" Width="20"
                        Visibility="{Binding IsSelectedStakeholder, Converter={StaticResource BoolToVisibilityConverter}}">
                <Button
                    Command="{Binding RemoveStakeholderCommand}">
                    <Button.Template>
                        <ControlTemplate TargetType="Button">
                            <Image Width="16"
                                   Height="16"
                                   Source="pack://application:,,,/StakeholderAnalysis.Visualization;component/Resources/Operations/delete.png" />
                        </ControlTemplate>
                    </Button.Template>
                </Button>
            </StackPanel>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="TwoAxisDiagramDataTemplate" DataType="twoAxisDiagrams:ITwoAxisDiagramViewModel">
        <!--Main grid-->
        <Grid Margin="10">
            <Grid.InputBindings>
                <MouseBinding MouseAction="LeftDoubleClick" Command="{Binding GridClickedCommand}" />
            </Grid.InputBindings>
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid.Resources>
                <CollectionViewSource x:Key="SortedDiagramStakeholders" Source="{Binding PositionedStakeholders}"
                                      IsLiveSortingRequested="True">
                    <CollectionViewSource.SortDescriptions>
                        <componentModel:SortDescription PropertyName="Rank" Direction="Ascending" />
                    </CollectionViewSource.SortDescriptions>
                </CollectionViewSource>
                <Style x:Key="AxisLabelTextStyle" TargetType="TextBlock">
                    <Setter Property="FontFamily" Value="{Binding AxisFontFamily}" />
                    <Setter Property="Foreground" Value="{Binding AxisFontColor}" />
                    <Setter Property="FontWeight" Value="{Binding AxisFontWeight}" />
                    <Setter Property="FontStyle" Value="{Binding AxisFontStyle}" />
                    <Setter Property="FontSize" Value="{Binding AxisFontSize}" />
                    <Setter Property="TextAlignment" Value="Center" />
                    <Setter Property="VerticalAlignment" Value="Center" />
                    <Setter Property="Margin" Value="10" />
                </Style>
            </Grid.Resources>
            <!--Diagram drawing grid (including twe canvasses-->
            <Grid Grid.Row="0" Grid.Column="1" Background="{Binding BackgroundBrush}">
                <!--Canvas that draws the arrows of the diagram-->
                <Canvas Name="LinesCanvas" Background="Transparent">
                    <Canvas.Resources>
                        <system:Double x:Key="MinValue">0.0</system:Double>
                        <system:Double x:Key="MaxValue">1.0</system:Double>
                        <system:Double x:Key="MiddleValue">0.5</system:Double>
                    </Canvas.Resources>
                    <Path Stroke="Black" StrokeThickness="3">
                        <Path.Data>
                            <MultiBinding Converter="{StaticResource SizeToArrowsPathDataConverter}">
                                <Binding ElementName="LinesCanvas" Path="ActualWidth" />
                                <Binding ElementName="LinesCanvas" Path="ActualHeight" />
                            </MultiBinding>
                        </Path.Data>
                    </Path>
                </Canvas>

                <!--Grid that holds all tekst objects inside the diagram-->
                <Grid>
                    <Grid.Resources>
                        <Style x:Key="CanvasBackgroundTextStyle" TargetType="TextBlock">
                            <Setter Property="Margin" Value="15" />
                            <Setter Property="FontFamily" Value="{Binding BackgroundFontFamily}" />
                            <Setter Property="FontWeight" Value="{Binding BackgroundFontWeight}" />
                            <Setter Property="Foreground" Value="{Binding BackgroundFontColor}" />
                            <Setter Property="FontStyle" Value="{Binding BackgroundFontStyle}" />
                            <Setter Property="FontSize" Value="{Binding BackgroundFontSize}" />
                        </Style>
                    </Grid.Resources>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <TextBlock Grid.Row="0" Grid.Column="0" Text="{Binding BackgroundTextLeftTop}" TextAlignment="Left"
                               Style="{StaticResource CanvasBackgroundTextStyle}" />
                    <TextBlock Grid.Row="2" Grid.Column="0" Text="{Binding BackgroundTextLeftBottom}"
                               TextAlignment="Left" Style="{StaticResource CanvasBackgroundTextStyle}" />
                    <TextBlock Grid.Row="2" Grid.Column="2" Text="{Binding BackgroundTextRightBottom}"
                               TextAlignment="Right" Style="{StaticResource CanvasBackgroundTextStyle}" />
                    <TextBlock Grid.Row="0" Grid.Column="2" Text="{Binding BackgroundTextRightTop}"
                               TextAlignment="Right" Style="{StaticResource CanvasBackgroundTextStyle}" />
                </Grid>
                <!--Canvas that holds all stakeholders-->
                <ItemsControl ItemsSource="{Binding Source={StaticResource SortedDiagramStakeholders}}"
                              Background="Transparent"
                              ItemTemplate="{StaticResource TwoAxisDiagramStakeholderDataTemplate}">
                    <ItemsControl.ItemContainerStyle>
                        <Style>
                            <Setter Property="Canvas.Left">
                                <Setter.Value>
                                    <MultiBinding Converter="{StaticResource PercentageToDimensionConverter}">
                                        <Binding Path="RelativePositionLeft" />
                                        <Binding RelativeSource="{RelativeSource Self}" Path="ActualWidth" />
                                        <Binding ElementName="Canvas" Path="ActualWidth" />
                                        <!--<Binding Path="IsSelectedStakeholder" Converter="{StaticResource IsSelectedStakeholderToOffsetConverter}"/>-->
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Canvas.Top">
                                <Setter.Value>
                                    <MultiBinding Converter="{StaticResource PercentageToDimensionConverter}">
                                        <Binding Path="RelativePositionTop" />
                                        <Binding RelativeSource="{RelativeSource Self}" Path="ActualHeight" />
                                        <Binding ElementName="Canvas" Path="ActualHeight" />
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ItemsControl.ItemContainerStyle>
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <Canvas Name="Canvas" IsItemsHost="True" />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                </ItemsControl>
            </Grid>
            <!--Grid that represents the labels next to the diagram-->
            <Grid Grid.Row="0" Grid.Column="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <TextBlock Grid.Row="0" Text="{Binding YAxisMaxLabel}" VerticalAlignment="Top"
                           Style="{StaticResource AxisLabelTextStyle}">
                    <TextBlock.LayoutTransform>
                        <RotateTransform Angle="270" />
                    </TextBlock.LayoutTransform>
                </TextBlock>
                <TextBlock Grid.Row="2" Text="{Binding YAxisMinLabel}" VerticalAlignment="Bottom"
                           Style="{StaticResource AxisLabelTextStyle}">
                    <TextBlock.LayoutTransform>
                        <RotateTransform Angle="270" />
                    </TextBlock.LayoutTransform>
                </TextBlock>
            </Grid>
            <Grid Grid.Row="1" Grid.Column="1">

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Column="2" Text="{Binding XAxisMaxLabel}" TextAlignment="Right"
                           Style="{StaticResource AxisLabelTextStyle}" />
                <TextBlock Grid.Column="0" Text="{Binding XAxisMinLabel}" TextAlignment="Left"
                           Style="{StaticResource AxisLabelTextStyle}" />
            </Grid>
        </Grid>
    </DataTemplate>
</ResourceDictionary>