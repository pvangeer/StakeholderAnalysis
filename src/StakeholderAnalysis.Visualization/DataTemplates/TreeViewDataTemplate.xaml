<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:propertiesTree="clr-namespace:StakeholderAnalysis.Visualization.ViewModels.PropertiesTree"
                    xmlns:visualization="clr-namespace:StakeholderAnalysis.Visualization"
                    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
                    xmlns:behaviors="clr-namespace:StakeholderAnalysis.Visualization.Behaviors"
                    xmlns:converters="clr-namespace:StakeholderAnalysis.Visualization.Converters">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="ProjectExplorer/ProjectExplorerButtonStyles.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <DataTemplate x:Key="ColorPropertyDataTemplate" DataType="propertiesTree:IColorPropertyTreeNodeViewModel">
        <xctk:ColorPicker 
            Height="20"
            SelectedColor="{Binding ColorValue}"/>
    </DataTemplate>

    <DataTemplate x:Key="DoubleUpDownPropertyDataTemplate" DataType="propertiesTree:IDoubleUpDownPropertyTreeNodeViewModelBase">
        <xctk:DoubleUpDown
            Value="{Binding DoubleValue}"
            Minimum="{Binding MinValue}"
            Maximum="{Binding MaxValue}"
            Increment="{Binding Increment}"
            FormatString="{Binding StringFormat}"/>
    </DataTemplate>

    <DataTemplate x:Key="CheckBoxTemplate" DataType="propertiesTree:IBooleanPropertyTreeNodeViewModel">
        <CheckBox 
            Height="20"
            HorizontalAlignment="Center"
            VerticalContentAlignment="Center"
            IsChecked="{Binding BooleanValue}"/>
    </DataTemplate>

    <DataTemplate x:Key="StringTemplate" DataType="propertiesTree:IStringPropertyTreeNodeViewModelBase">
        <TextBox 
            Text="{Binding StringValue, UpdateSourceTrigger=PropertyChanged}"/>
    </DataTemplate>

    <visualization:PropertyValueTreeNodeTemplateSelector x:Key="PropertyValueContentTemplateSelector"
                                                         CheckBoxTemplate="{StaticResource CheckBoxTemplate}"
                                                         StringTempalte="{StaticResource StringTemplate}"
                                                         ColorTemplate="{StaticResource ColorPropertyDataTemplate}"
                                                         DoubleUpDownTemplate="{StaticResource DoubleUpDownPropertyDataTemplate}"/>

    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    <converters:QuickSelectionToVisibilityConverter x:Key="QuickSelectionToVisibilityConverter" />
    <converters:SourceStringToVisibilityConverter x:Key="SourceStringToVisibilityConverter" />

    <DataTemplate x:Key="ITreeNodeItemDataTemplate" DataType="propertiesTree:ITreeNodeViewModel">
        <Border BorderThickness="0">
            <Border.Style>
                <Style TargetType="Border" BasedOn="{StaticResource ExpandableElementBorderStyle}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding CanOpen}" Value="True">
                            <Setter Property="behaviors:AttachInputBindingsBehavior.InputBindings">
                                <Setter.Value>
                                    <InputBindingCollection>
                                        <MouseBinding MouseAction="LeftDoubleClick" Command="{Binding OpenViewCommand}"></MouseBinding>
                                    </InputBindingCollection>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Button 
                    Grid.Column="0"
                    Width="24"
                    Command="{Binding ToggleIsExpandedCommand}"
                    Visibility="{Binding IsExpandable, Converter={StaticResource BooleanToVisibilityConverter}}"
                    Style="{StaticResource ExpandCollapseButtonStyle}"/>
                <Image
                    Grid.Column="1"
                    Width="20"
                    Height="20"
                    Margin="2,0,2,0"
                    Visibility="{Binding IconSourceString, Converter={StaticResource SourceStringToVisibilityConverter}}"
                    Source="{Binding IconSourceString}"/>
                <CheckBox Grid.Column="2"
                          VerticalContentAlignment="Center"
                          Margin="0,0,2,0"
                          Visibility="{Binding Converter={StaticResource QuickSelectionToVisibilityConverter}}"
                          IsChecked="{Binding IsSelected}"/>
                <TextBlock 
                    TextAlignment="Left"
                    Grid.Column="3" 
                    Text="{Binding DisplayName}" 
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Center"
                    FontSize="12"/>
                <Button 
                    Grid.Column="4"
                    Margin="2"
                    Visibility="{Binding CanRemove, Converter={StaticResource BooleanToVisibilityConverter}}"
                    Command="{Binding RemoveItemCommand}"
                    Style="{StaticResource RemoveButtonStyle}"/>
                <Button 
                    Grid.Column="5"
                    Margin="2"
                    Visibility="{Binding CanAdd, Converter={StaticResource BooleanToVisibilityConverter}}"
                    Command="{Binding AddItemCommand}"
                    Style="{StaticResource AddButtonStyle}"/>
            </Grid>
        </Border>
    </DataTemplate>

    <DataTemplate x:Key="PropertyValueItemDataTemplate" DataType="propertiesTree:ITreeNodeViewModel">
        <Border Style="{StaticResource ExpandableElementBorderStyle}">
            <Grid>
                <Grid.Resources>
                </Grid.Resources>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="5"/>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="True"/>
                </Grid.ColumnDefinitions>
                <TextBlock 
                    Grid.Column="0" 
                    Text="{Binding DisplayName}" 
                    TextAlignment="Left"
                    VerticalAlignment="Center"
                    Background="Transparent"/>
                <GridSplitter Grid.Column="1" Width="5" Background="Gainsboro" HorizontalAlignment="Stretch" ResizeBehavior="BasedOnAlignment"/>
                <ContentPresenter 
                    Grid.Column="2" 
                    Content="{Binding }" 
                    ContentTemplateSelector="{StaticResource PropertyValueContentTemplateSelector}">
                </ContentPresenter>
            </Grid>
        </Border>
    </DataTemplate>

    <DataTemplate x:Key="IPropertyCollectionItemDataTemplate" DataType="propertiesTree:IPropertyCollectionTreeNodeViewModel">
        <StackPanel Orientation="Vertical">
            <ContentPresenter Content="{Binding }" ContentTemplate="{StaticResource ITreeNodeItemDataTemplate}"/>
            <Grid Visibility="{Binding IsExpanded, Converter={StaticResource BooleanToVisibilityConverter}}" >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="24"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <ItemsControl 
                    Grid.Column="1"
                    ItemsSource="{Binding Items}" 
                    Grid.IsSharedSizeScope="True">
                    <ItemsControl.Style>
                        <Style TargetType="ItemsControl">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding CollectionType}" Value="{x:Static propertiesTree:CollectionType.PropertyValue}">
                                    <Setter Property="ItemTemplate" Value="{StaticResource PropertyValueItemDataTemplate}"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding CollectionType}" Value="{x:Static propertiesTree:CollectionType.CollectionList}">
                                    <Setter Property="ItemTemplate" Value="{DynamicResource IPropertyCollectionItemDataTemplate}"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ItemsControl.Style>
                </ItemsControl>
            </Grid>
        </StackPanel>
    </DataTemplate>
</ResourceDictionary>