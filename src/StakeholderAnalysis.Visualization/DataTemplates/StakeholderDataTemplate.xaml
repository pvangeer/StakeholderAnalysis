<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:viewModels="clr-namespace:StakeholderAnalysis.Visualization.ViewModels"
                    xmlns:data="clr-namespace:StakeholderAnalysis.Data;assembly=StakeholderAnalysis.Data"
                    xmlns:converters="clr-namespace:StakeholderAnalysis.Visualization.Converters"
                    xmlns:visualization="clr-namespace:StakeholderAnalysis.Visualization">

    <converters:TypeToBrushConverter x:Key="TypeToBrushConverter" />

    <DataTemplate x:Key="StakeholderPopupDataTemplate" DataType="viewModels:StakeholderViewModel">
        <Border Background="AntiqueWhite" BorderBrush="Gray" BorderThickness="1">
            <Grid Width="300" Height="400">
                <TextBlock Text="{Binding Name}" HorizontalAlignment="Center" />
            </Grid>
        </Border>
    </DataTemplate>

    <DataTemplate x:Key="StakeholderDataTemplate" DataType="viewModels:StakeholderViewModel">
        <Border CornerRadius="1" visualization:DragOnCanvasBehavior.DropHandler="{Binding }">
            <Border.InputBindings>
                <MouseBinding MouseAction="LeftDoubleClick" Command="{Binding StakeholderClickedCommand}" />
            </Border.InputBindings>
            <Border.Style>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="BorderBrush" Value="Gray" />
                    <Setter Property="BorderThickness" Value="1" />
                    <Style.Triggers>
                        <DataTrigger Value="True">
                            <DataTrigger.Binding>
                                <Binding Path="IsSelectedStakeholder"/>
                            </DataTrigger.Binding>
                            <Setter Property="BorderBrush" Value="DarkRed" />
                            <Setter Property="BorderThickness" Value="2" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>
            <Grid Background="{Binding Type, Converter={StaticResource TypeToBrushConverter}}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <TextBlock Grid.Row="0" Text="{Binding Name}" TextAlignment="Center" HorizontalAlignment="Center"
                           Margin="1" MaxWidth="90" TextWrapping="Wrap" />
                <Image Grid.Row="1" Margin="2" Width="30" Height="30">
                    <Image.Style>
                        <Style TargetType="{x:Type Image}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Type}"
                                             Value="{x:Static data:StakeholderType.Waterkeringbeheerder}">
                                    <Setter Property="Source"
                                            Value="pack://application:,,,/StakeholderAnalysis.Visualization;component/Resources/Waterschap.png" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Type}"
                                             Value="{x:Static data:StakeholderType.Kennisinstituut}">
                                    <Setter Property="Source"
                                            Value="pack://application:,,,/StakeholderAnalysis.Visualization;component/Resources/Knowledge.png" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Type}"
                                             Value="{x:Static data:StakeholderType.Rijksoverheid}">
                                    <Setter Property="Source"
                                            Value="pack://application:,,,/StakeholderAnalysis.Visualization;component/Resources/Pak.png" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Type}"
                                             Value="{x:Static data:StakeholderType.Stakeholdergroep}">
                                    <Setter Property="Source"
                                            Value="pack://application:,,,/StakeholderAnalysis.Visualization;component/Resources/Group.png" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Type}"
                                             Value="{x:Static data:StakeholderType.Ingenieursbureaus}">
                                    <Setter Property="Source"
                                            Value="pack://application:,,,/StakeholderAnalysis.Visualization;component/Resources/euro.png" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Type}" Value="{x:Static data:StakeholderType.Overig}">
                                    <Setter Property="Source"
                                            Value="pack://application:,,,/StakeholderAnalysis.Visualization;component/Resources/other.png" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Image.Style>
                </Image>
                <Popup Name="popLogFile"
                       PlacementTarget="{Binding ElementName=btnLogFile}" Placement="MousePoint"
                       HorizontalOffset="0" VerticalOffset="0"
                       StaysOpen="False">
                    <ContentPresenter Content="{Binding ElementName=Presenter, Path=SelectedStakeholder}"
                                      ContentTemplate="{StaticResource StakeholderPopupDataTemplate}" />
                </Popup>
                <Grid.Triggers>
                    <EventTrigger RoutedEvent="Button.ContextMenuOpening">
                        <BeginStoryboard>
                            <Storyboard TargetName="popLogFile" TargetProperty="IsOpen">
                                <BooleanAnimationUsingKeyFrames FillBehavior="HoldEnd">
                                    <DiscreteBooleanKeyFrame
                                        KeyTime="00:00:00"
                                        Value="True" />
                                </BooleanAnimationUsingKeyFrames>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                </Grid.Triggers>
            </Grid>
        </Border>
    </DataTemplate>
</ResourceDictionary>