<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:viewModels="clr-namespace:StakeholderAnalysis.Visualization.ViewModels"
                    xmlns:converters="clr-namespace:StakeholderAnalysis.Visualization.Converters"
                    xmlns:behaviors="clr-namespace:StakeholderAnalysis.Visualization.Behaviors">

    <DataTemplate x:Key="StakeholderPopupDataTemplate" DataType="viewModels:StakeholderViewModel">
        <Border Background="AntiqueWhite" BorderBrush="Gray" BorderThickness="1">
            <Grid Width="300" Height="400">
                <TextBlock Text="{Binding Name}" HorizontalAlignment="Center" />
            </Grid>
        </Border>
    </DataTemplate>

    <converters:IconTypeToIconSourceConverter x:Key="IconTypeToIconSourceConverter" />

    <DataTemplate x:Key="StakeholderDataTemplate" DataType="viewModels:StakeholderViewModel">
        <Border CornerRadius="1" behaviors:DragOnCanvasBehavior.DropHandler="{Binding }" IsHitTestVisible="True">
            <Border.InputBindings>
                <MouseBinding MouseAction="LeftDoubleClick" Command="{Binding StakeholderClickedCommand}" />
            </Border.InputBindings>
            <Border.Style>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="BorderBrush" Value="Gray" />
                    <Setter Property="BorderThickness" Value="1" />
                    <Style.Triggers>
                        <!--TODO: Move color to viewmodel and away from this datatemplate -->
                        <DataTrigger Value="True">
                            <DataTrigger.Binding>
                                <Binding Path="IsSelectedStakeholder"/>
                            </DataTrigger.Binding>
                            <Setter Property="BorderBrush" Value="DarkRed" />
                            <Setter Property="BorderThickness" Value="2" />
                        </DataTrigger>
                        <DataTrigger Value="True">
                            <DataTrigger.Binding>
                                <Binding Path="IsConnectionToTarget"/>
                            </DataTrigger.Binding>
                            <Setter Property="BorderBrush" Value="DarkGreen" />
                            <Setter Property="BorderThickness" Value="2" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>
            <Grid IsHitTestVisible="True">
                <Grid.Background>
                    <SolidColorBrush Color="{Binding Type.Color}"/>
                </Grid.Background>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <TextBlock Grid.Row="0" Text="{Binding Name}" TextAlignment="Center" HorizontalAlignment="Center"
                           Margin="1" MaxWidth="90" TextWrapping="Wrap" IsHitTestVisible="False"/>
                <Image 
                    Grid.Row="1" 
                    Margin="2" 
                    Width="30" 
                    Height="30" 
                    IsHitTestVisible="False" 
                    Source="{Binding Type.IconType, Converter={StaticResource IconTypeToIconSourceConverter}}"/>
                <Popup Name="popLogFile"
                       PlacementTarget="{Binding ElementName=btnLogFile}" Placement="MousePoint"
                       HorizontalOffset="0" VerticalOffset="0"
                       StaysOpen="False">
                    <ContentPresenter Content="{Binding ElementName=Presenter, Path=SelectedStakeholder}"
                                      ContentTemplate="{StaticResource StakeholderPopupDataTemplate}" />
                </Popup>
                <Grid.Triggers>
                    <EventTrigger RoutedEvent="Button.ContextMenuOpening">
                        <BeginStoryboard>
                            <Storyboard TargetName="popLogFile" TargetProperty="IsOpen">
                                <BooleanAnimationUsingKeyFrames FillBehavior="HoldEnd">
                                    <DiscreteBooleanKeyFrame
                                        KeyTime="00:00:00"
                                        Value="True" />
                                </BooleanAnimationUsingKeyFrames>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                </Grid.Triggers>
            </Grid>
        </Border>
    </DataTemplate>
</ResourceDictionary>